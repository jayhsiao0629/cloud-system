version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"

  backend:
    # image: final-backend:latest
    # or 
    build: 
      context: ./backend
      dockerfile: Dockerfile
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    ports:
      - 5000:5000

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    environment:
      FLASK_SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://postgres:postgres@db:5432/postgres
      FLASK_APP: flaskr
      
  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      # 這行會把本機 ./grafana/ 底下所有檔案，直接對應到容器內 /etc/grafana/provisioning/datasources
      - ./grafana/:/etc/grafana/provisioning/datasources:ro
    ports:
      - "4000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'
      - '--collector.textfile.directory=/host/textfile_collector'
    ports:
      - "9100:9100"
    restart: unless-stopped

volumes:
  postgres-data:
  grafana-data: